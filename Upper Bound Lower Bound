https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array/


class Solution {
    public int[] searchRange(int[] nums, int target) {
        if(nums.length==0) return new int[]{-1,-1};
        
        int answer[]  = new int[2];
        int lb = lowerbound(nums,target);
        if(lb==-1){
            answer[0] =-1;
            answer[1] = -1;
            return answer;
        }
        
        else{
            int up = upperbound(nums,target);
            answer[0] = lb;
            answer[1] = up;
            return answer;
        }
        
        
    }
   
    public int upperbound(int nums[],int target){
        int l=0;
        int r =nums.length-1;
        int up = -1;
        while(l<=r){
            int mid = l+(r-l)/2;
            
            if(nums[mid]==target){
                up = mid;
                l = mid+1;
            }
            else if(nums[mid]>target){
                r =mid-1;
            }
            else l = mid+1;
            
        }
        
        return up;
    }
    
    public int lowerbound(int nums[],int target){
        
        int l = 0;
        int r = nums.length-1;
        int lb =-1;
        while(l<=r){
            
            int mid = l+(r-l)/2;
            
            if(nums[mid]==target){
                lb = mid;
                r = mid-1;
            }
            
            else if(nums[mid]>target){
                r = mid-1;
            }
            else{
                l =mid+1;
                
            }   
        }
        return lb;
    }
    
    
}
