class Solution {
    public void nextPermutation(int[] nums) {
        
        
        int n = nums.length-1;
        if(n==0) return;
        
        int flag1=-1;
        int flag2 =-1;
        for(int i=n-1;i>=0;i--){
            if(nums[i]<nums[i+1]){
                flag1 = i;
                break;
            }
        }
        
        
        if(flag1==-1){
            int i=0;
            int j=n;
            while(i<j){
                swap(nums,i,j);
                i++;
                j--;
            }
            return;
        }
        
        
        
        flag2 = n;
        while(flag2>=flag1 && nums[flag2]<=nums[flag1]) flag2--;
        swap(nums,flag1,flag2);
        
        
        int i=flag1+1;
        int j=n;
        while(i<j){
            swap(nums,i,j);
            i++;
            j--;
        }
        
    }
    
    
    public void swap(int nums[],int i,int j){
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
